
## Scenario settings
# Scenario.name = default_scenario
Scenario.name = tes_interest
Scenario.simulateConnections = false
Scenario.updateInterval = 0.1
# 43200s == 12h
#Scenario.endTime = 43200
Scenario.endTime = 274883

# 16981816 Reality 8490908
# 274883 Haggle 3 Infocom 5

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

# Define number of node groups
# Define 6 different node groups
# => Scenario.nrofHostGroups = 6
Scenario.nrofHostGroups = 1

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
#Group.movementModel = ShortestPathMapBasedMovement
Group.movementModel = StationaryMovement
#Group.movementModel = RandomWaypoint
Group.router = RLRouter

# 900 => 15 menit
CCRouting.updateInterval = 900
# total state & action didapat dari jumlah keseluruhan node
CCRouting.totalState = 97
CCRouting.totalAction = 97

# Decision Engine Router
#Group.router = DecisionEngineRouter
#DecisionEngineRouter.decisionEngine = ProphetDecisionEngine

Group.bufferSize = 20M
# 10M Haggle3 - Infocom5
# 20M Reality

Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 360
#360 Haggle 3 infocom 5
#10080 Reality 20160

Group.nrofHosts = 97

# group1 (pedestrians) specific settings
Group1.groupID = p
Group1.nodeLocation = 10, 10


## Message creation parameters
# How many event generators
Events.nrof = 2
# Class of the first event generator
Events1.class = ExternalEventsQueue
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.filePath = RealityConnectionTraceFinal.txt
# Haggle3-Infocom5.csv
# RealityConnectionTraceFinal.txt

Events2.class = MessageEventGenerator
# change interval to have more or less messages, see javadocs for more information.

Events2.interval = 1160, 1240

# 25,30 (~120 texts/hour)
# 290, 310 (~12 texts/hour) Reality1
# 580, 620 (~ 6 texts/hour)
# 1160, 1240 (~ 3 texts/ hour) Haggle3 - Infocom5, Reality2
# 2320, 2480 (~ 1 texts/ hour)

Events2.size = 500k
# range of message source/destination addresses
Events2.hosts = 0,96
Events2.prefix = M

Events2.time = 0, 274883
#274883 Haggle 3 infocom 5 253283
#16981816 Reality 16377016 15772216

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 1000, 1000
# How long time to move hosts in the world before real simulation
#MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/RL_Hagle/
# Report classes to load
Report.report1 = MessageStatsReport
#Report.report2 = TestingReport
#Report.report3 = ContactTimesReport

## Default settings for some routers settings
## QLCC.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
